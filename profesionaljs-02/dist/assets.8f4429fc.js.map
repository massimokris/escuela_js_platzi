{"version":3,"sources":["assets/plugins/AutoPlay.js","assets/plugins/AutoPause.js","assets/MediaPlayer.js","assets/index.js"],"names":["AutoPlay","prototype","run","player","muted","play","module","exports","AutoPause","constructor","threshold","handlerIntersection","bind","handlerVisibilityChange","observer","IntersectionObserver","observe","media","document","addEventListener","entries","entry","intersectionRatio","pause","visibilityState","MediaPlayer","config","el","plugins","_initPlugins","value","forEach","plugin","togglePlay","paused","mute","unmute","toggleMute","video","querySelector","getElementsByClassName","Autopause","onclick","navigator","serviceWorker","register","catch","error","console","log","message"],"mappings":"AEAA,AFAA,SEASyB,AFAAzB,QAAT,GEAA,AFAoB,CEAC0B,AFAC,MEAtB,EAA6B;AACzB,OAAKT,KAAL,GAAaS,MAAM,CAACC,EAApB;AACA,ACFJ,AHEA3B,OEAS4B,CFAD,CAAC3B,KEAL,GAAeyB,CFAnB,CAAmBxB,GAAnB,CEAyB,CAAC0B,CFAD,MEAN,IAAkB,AFAFzB,EEA/B,IFAqB,EAAkB;AACvC,MAAG,CAACA,MAAM,CAACC,KAAX,EAAkB;AEClB,ACHJ,AHGQD,IAAAA,GEAC0B,GFAK,CAACzB,KAAP,GEAJ,AFAmB,IAAf;AECP,AFAI;AGHL;ADKAqB,ADPA,ADMItB,EAAAA,ICNEK,EDMI,CAACH,EECA,CAACJ,CFDR,ECNJ,CAAgB,KCOhB,CAAsB4B,YAAtB,GAAqC,YAAY;AAC7C,ADPApB,ADMH,CALD,CCDIA,MCOMN,KDPK,CCOC,EDPG,CCOA;AACXE,ADPA,ICOAA,IAAI,CDPCK,CCOC,MAAM,EDPZ,GCOiBL,ADPA,ICOL,ADPZ,ECMW;AAEXkB,ACNR,AFDQ,ADMRjB,IECQiB,EFDF,CAAChB,EECM,ADPAI,ECOE,GFDf,GECqB,AFDJX,KECSuB,GFD1B,EECqB,CDPb,CCKW,EDLgB,KAAKZ,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;ACQAK,ACLR,AFFQ,ICOAA,ECLFqB,GDKO,ADPAzB,ECOE,ACLJ,GAAGK,EDKMD,KAHD,CCFG,CAACsB,SFFf,GAA+B,CEEzB,CAAuB,GFFO1B,IEE9B,CAAd,kBFFuC,CAA6BD,IAA7B,CAAkC,IAAlC,CAA/B;AEGR,AFFK,MEECP,IAAI,GAAGa,QAAQ,CAACsB,sBAAT,CAAgC,MAAhC,CAAb;ADKQ,ACJR,MAAML,EDIM/B,ECJF,GDIF,ACJKc,GDIO,KCJC,CAACsB,sBAAT,CAAgC,MAAhC,CAAb;ADKY,ACHZ,AFJItC,EAAAA,GAAG,CEIDC,AFJEA,MEII,AFJL,CCOY,CDPH,CEID,GDGSc,CCHLQ,IDGA,CAAWrB,KAAlB,UCHG,CAAgB;ADItB,ACJwBuB,AFHzB,EEGyBA,EAAE,CDFhB,CCEkBW,GFHxBnC,EEGkB,IFHvB,GAAcA,MAAd;AEGoCyB,AFFpC,EEEoCA,OAAO,CFFrCd,CEEuC,CAAC,IAAId,EFFpC,GAAG,IAAIe,QEEyB,EAAD,EAAe,IAAI0B,IFF/C,CAAyB,KAAK9B,QEEa,EAAf,SFF5B,EAAmD;ACOpE,ACLuB,AFDnBD,CECG,CAAf,IFDYA,ECMAN,KAAJ,CAAU0B,CDNG,EAAE,ECMf,EAAiB,CDNGpB;ACOhB,ADRgE,KAAnD,CAAjB,KCQSO,KAAL,CAAWb,KAAX,GAAmB0B,KAAnB;AACH,ACNTzB,AFCQS,IEDJ,AFCIA,CEDH4B,OAAL,AFCgB,CAAC1B,EEDF,KFCP,CEDab,AFCIA,MEDE,AFCI,CEDH8B,AFCIhB,KAAxB,KEDa,EAArB;AFEQC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,KAAKN,uBAAnD;ACLW,ACInBsB,AFEK,GCND,CCIA,CAACO,OAAL,GAAe,MAAMvC,MAAM,CAACkC,UAAP,EAArB;ADQI,OAAKT,OAAL,CAAaG,OAAb,CAAqBC,MAAM,IAAI;AAC3BA,ACPR,AFEIrB,EAAAA,ECKIqB,ACPL,MDOW,CAAC9B,GAAP,CAAWC,MAAX,ADLe,CAAEiB,CEFHuB,MFEC,EAAW,CEFlC,EAAgC;ADQ3B,ACPDA,AFEI,EEFJA,CDKA,ODHUtB,CEFD,CAACuB,GFEK,GAAGxB,OEFlB,AFEyB,CEFDyB,AFEE,CAAD,CAArB,MEFJ,CAAiC,sCAAjC,EAA2CC,KAA3C,CAAiDC,KAAK,IAAI;ADQ7D,ACPOC,CDTR,GCSQA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH,AFEG,GEJJ,KFIO7B,KAAK,CAACC,iBAAN,IAA2B,KAAKZ,SAAnC,EAA6C;ACMrDe,ACPC,AFEW,WCKD,ADLMtB,CCKLF,KDLA,CAAYI,GCKxB,CAAsBA,ADLV,ICKZ,GAA6B,YAAY;AACrC,ADLK,KAFD,ECOCY,IDLI,CCKT,CAAWZ,IAAX;AACH,ADLW,CCGZ,UDHiBF,MAAL,CAAYoB,KAAZ;AACH;ACMTE,ADLK,WCKM,CAACxB,SAAZ,CAAsBsB,KAAtB,GAA8B,YAAY;AACtC,OAAKN,KAAL,CAAWM,KAAX;AACH,ADLGV,CCGJ,CDHIA,uBAAuB,GAAI;AACvB,QAAIK,QAAQ,CAACM,eAAT,KAA6B,SAAjC,EAA2C;ACMnDC,ADLY,WCKD,ADLMtB,CCKLF,KDLA,CAAYI,GCKxB,CAAsB4B,ADLV,UCKZ,GAAmC,YAAY;AAC3C,ADLK,KAFD,ECOChB,IDLI,CCKT,CAAWiB,MAAX,GAAoB,KAAK7B,IAAL,EAApB,GAAkC,KAAKkB,KAAL,EAAlC;AACH,ADLW,CCGZ,UDHiBpB,MAAL,CAAYoB,KAAZ;AACH;ACMTE,ADLK,WCKM,CAACxB,SAAZ,CAAsBkC,IAAtB,GAA6B,YAAY;AACrC,OAAKlB,KAAL,CAAWb,KAAX,GAAmB,IAAnB;AACH,ADvCe,CCqChB;;AAIAqB,WAAW,CAACxB,GDNGO,MCMf,CAAsB4B,MAAtB,GAA+B,YAAY;AACvC,OAAKnB,KAAL,CAAWb,KAAX,GAAmB,KAAnB;AACH,CAFD;;AAIAqB,WAAW,CAACxB,SAAZ,CAAsBoC,UAAtB,GAAmC,YAAY;AAC3C,OAAKpB,KAAL,CAAWb,KAAX,GAAmB,KAAKgC,MAAL,EAAnB,GAAmC,KAAKD,IAAL,EAAnC;AACH,CAFD;;AAIA7B,MAAM,CAACC,OAAP,GAAiBkB,WAAjB","file":"assets.8f4429fc.js","sourceRoot":"..","sourcesContent":["function AutoPlay() {}\r\n\r\nAutoPlay.prototype.run = function (player) {\r\n    if(!player.muted) {\r\n        player.muted = true;\r\n    }\r\n    player.play();\r\n}\r\n\r\nmodule.exports = AutoPlay;","class AutoPause {\r\n    constructor () {\r\n        this.threshold = 0.25\r\n        this.handlerIntersection = this.handlerIntersection.bind(this);\r\n        this.handlerVisibilityChange = this.handlerVisibilityChange.bind(this);\r\n    }\r\n    run(player) {\r\n        this.player = player;\r\n        const observer = new IntersectionObserver(this.handlerIntersection, {\r\n            threshold: this.threshold\r\n        });\r\n        \r\n        observer.observe(player.media);\r\n        document.addEventListener('visibilitychange', this.handlerVisibilityChange);\r\n    }\r\n\r\n    handlerIntersection (entries) {\r\n        const entry = entries[0];\r\n        \r\n        if(entry.intersectionRatio >= this.threshold){\r\n            this.player.play();\r\n        }else{\r\n            this.player.pause();\r\n        }\r\n    }\r\n\r\n    handlerVisibilityChange () {\r\n        if (document.visibilityState === 'visible'){\r\n            this.player.play();\r\n        }else{\r\n            this.player.pause();\r\n        }\r\n    }\r\n}\r\n\r\nexport default AutoPause;","function MediaPlayer(config) {\r\n    this.media = config.el\r\n    this.plugins = config.plugins || [];\r\n\r\n    this._initPlugins();\r\n}\r\n\r\nMediaPlayer.prototype._initPlugins = function () {\r\n    const player = {\r\n        play: () => this.play(),\r\n        pause: () => this.pause(),\r\n        media: this.media,\r\n        get muted() {\r\n            return this.media.muted\r\n        },\r\n        set muted(value) { \r\n            this.media.muted = value;\r\n        } \r\n    }\r\n\r\n    this.plugins.forEach(plugin => {\r\n        plugin.run(player);\r\n    });\r\n}\r\n\r\nMediaPlayer.prototype.play = function () {\r\n    this.media.play();\r\n}\r\n\r\nMediaPlayer.prototype.pause = function () {\r\n    this.media.pause();\r\n}\r\n\r\nMediaPlayer.prototype.togglePlay = function () {\r\n    this.media.paused ? this.play() : this.pause();\r\n}\r\n\r\nMediaPlayer.prototype.mute = function () {\r\n    this.media.muted = true;\r\n}\r\n\r\nMediaPlayer.prototype.unmute = function () {\r\n    this.media.muted = false;\r\n}\r\n\r\nMediaPlayer.prototype.toggleMute = function () {\r\n    this.media.muted ? this.unmute() : this.mute();\r\n}\r\n\r\nmodule.exports = MediaPlayer;","import AutoPlay from './plugins/AutoPlay.js';\r\nimport Autopause from './plugins/AutoPause.js';\r\nimport MediaPlayer from './MediaPlayer.js';\r\n\r\n//const { MediaPlayer } = require('./MediaPlayer.js');\r\n\r\nconst video = document.querySelector(\"video\");\r\nconst play = document.getElementsByClassName('play');\r\nconst mute = document.getElementsByClassName('mute');\r\n\r\nconst player = new MediaPlayer({ el: video, plugins: [new AutoPlay, new Autopause] });\r\nplay.onclick = () => player.togglePlay();\r\nmute.onclick = () => player.toggleMute();\r\n\r\nif('serviceWorker' in navigator){\r\n    navigator.serviceWorker.register('/sw.js').catch(error => {\r\n        console.log(error.message);\r\n    });\r\n}\r\n"]}